/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ListsIndexImport } from './routes/lists/index'
import { Route as ListsCreateIndexImport } from './routes/lists/create/index'
import { Route as ListsListIdIndexImport } from './routes/lists/$listId/index'
import { Route as AuthSignUpIndexImport } from './routes/auth/sign-up/index'
import { Route as AuthSignInIndexImport } from './routes/auth/sign-in/index'
import { Route as ListsListIdUpdateIndexImport } from './routes/lists/$listId/update/index'

// Create/Update Routes

const ListsIndexRoute = ListsIndexImport.update({
  id: '/lists/',
  path: '/lists/',
  getParentRoute: () => rootRoute,
} as any)

const ListsCreateIndexRoute = ListsCreateIndexImport.update({
  id: '/lists/create/',
  path: '/lists/create/',
  getParentRoute: () => rootRoute,
} as any)

const ListsListIdIndexRoute = ListsListIdIndexImport.update({
  id: '/lists/$listId/',
  path: '/lists/$listId/',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignUpIndexRoute = AuthSignUpIndexImport.update({
  id: '/auth/sign-up/',
  path: '/auth/sign-up/',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignInIndexRoute = AuthSignInIndexImport.update({
  id: '/auth/sign-in/',
  path: '/auth/sign-in/',
  getParentRoute: () => rootRoute,
} as any)

const ListsListIdUpdateIndexRoute = ListsListIdUpdateIndexImport.update({
  id: '/lists/$listId/update/',
  path: '/lists/$listId/update/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/lists/': {
      id: '/lists/'
      path: '/lists'
      fullPath: '/lists'
      preLoaderRoute: typeof ListsIndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/sign-in/': {
      id: '/auth/sign-in/'
      path: '/auth/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInIndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/sign-up/': {
      id: '/auth/sign-up/'
      path: '/auth/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpIndexImport
      parentRoute: typeof rootRoute
    }
    '/lists/$listId/': {
      id: '/lists/$listId/'
      path: '/lists/$listId'
      fullPath: '/lists/$listId'
      preLoaderRoute: typeof ListsListIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/lists/create/': {
      id: '/lists/create/'
      path: '/lists/create'
      fullPath: '/lists/create'
      preLoaderRoute: typeof ListsCreateIndexImport
      parentRoute: typeof rootRoute
    }
    '/lists/$listId/update/': {
      id: '/lists/$listId/update/'
      path: '/lists/$listId/update'
      fullPath: '/lists/$listId/update'
      preLoaderRoute: typeof ListsListIdUpdateIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/lists': typeof ListsIndexRoute
  '/auth/sign-in': typeof AuthSignInIndexRoute
  '/auth/sign-up': typeof AuthSignUpIndexRoute
  '/lists/$listId': typeof ListsListIdIndexRoute
  '/lists/create': typeof ListsCreateIndexRoute
  '/lists/$listId/update': typeof ListsListIdUpdateIndexRoute
}

export interface FileRoutesByTo {
  '/lists': typeof ListsIndexRoute
  '/auth/sign-in': typeof AuthSignInIndexRoute
  '/auth/sign-up': typeof AuthSignUpIndexRoute
  '/lists/$listId': typeof ListsListIdIndexRoute
  '/lists/create': typeof ListsCreateIndexRoute
  '/lists/$listId/update': typeof ListsListIdUpdateIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/lists/': typeof ListsIndexRoute
  '/auth/sign-in/': typeof AuthSignInIndexRoute
  '/auth/sign-up/': typeof AuthSignUpIndexRoute
  '/lists/$listId/': typeof ListsListIdIndexRoute
  '/lists/create/': typeof ListsCreateIndexRoute
  '/lists/$listId/update/': typeof ListsListIdUpdateIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/lists'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/lists/$listId'
    | '/lists/create'
    | '/lists/$listId/update'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/lists'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/lists/$listId'
    | '/lists/create'
    | '/lists/$listId/update'
  id:
    | '__root__'
    | '/lists/'
    | '/auth/sign-in/'
    | '/auth/sign-up/'
    | '/lists/$listId/'
    | '/lists/create/'
    | '/lists/$listId/update/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  ListsIndexRoute: typeof ListsIndexRoute
  AuthSignInIndexRoute: typeof AuthSignInIndexRoute
  AuthSignUpIndexRoute: typeof AuthSignUpIndexRoute
  ListsListIdIndexRoute: typeof ListsListIdIndexRoute
  ListsCreateIndexRoute: typeof ListsCreateIndexRoute
  ListsListIdUpdateIndexRoute: typeof ListsListIdUpdateIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  ListsIndexRoute: ListsIndexRoute,
  AuthSignInIndexRoute: AuthSignInIndexRoute,
  AuthSignUpIndexRoute: AuthSignUpIndexRoute,
  ListsListIdIndexRoute: ListsListIdIndexRoute,
  ListsCreateIndexRoute: ListsCreateIndexRoute,
  ListsListIdUpdateIndexRoute: ListsListIdUpdateIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/lists/",
        "/auth/sign-in/",
        "/auth/sign-up/",
        "/lists/$listId/",
        "/lists/create/",
        "/lists/$listId/update/"
      ]
    },
    "/lists/": {
      "filePath": "lists/index.tsx"
    },
    "/auth/sign-in/": {
      "filePath": "auth/sign-in/index.tsx"
    },
    "/auth/sign-up/": {
      "filePath": "auth/sign-up/index.tsx"
    },
    "/lists/$listId/": {
      "filePath": "lists/$listId/index.tsx"
    },
    "/lists/create/": {
      "filePath": "lists/create/index.tsx"
    },
    "/lists/$listId/update/": {
      "filePath": "lists/$listId/update/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
